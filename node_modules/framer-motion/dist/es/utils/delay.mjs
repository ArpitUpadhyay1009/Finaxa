<<<<<<< HEAD
import { frame, cancelFrame } from '../frameloop/frame.mjs';
=======
import { time, frame, cancelFrame } from 'motion-dom';
import { secondsToMilliseconds } from 'motion-utils';
>>>>>>> 3c08b929f5a458570a719f4b5eccee16e2fc4c1d

/**
 * Timeout defined in ms
 */
function delay(callback, timeout) {
<<<<<<< HEAD
    const start = performance.now();
=======
    const start = time.now();
>>>>>>> 3c08b929f5a458570a719f4b5eccee16e2fc4c1d
    const checkElapsed = ({ timestamp }) => {
        const elapsed = timestamp - start;
        if (elapsed >= timeout) {
            cancelFrame(checkElapsed);
            callback(elapsed - timeout);
        }
    };
<<<<<<< HEAD
    frame.read(checkElapsed, true);
    return () => cancelFrame(checkElapsed);
}

export { delay };
=======
    frame.setup(checkElapsed, true);
    return () => cancelFrame(checkElapsed);
}
function delayInSeconds(callback, timeout) {
    return delay(callback, secondsToMilliseconds(timeout));
}

export { delay, delayInSeconds };
>>>>>>> 3c08b929f5a458570a719f4b5eccee16e2fc4c1d
