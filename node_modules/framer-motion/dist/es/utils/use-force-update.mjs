<<<<<<< HEAD
import { useState, useCallback } from 'react';
import { useIsMounted } from './use-is-mounted.mjs';
import { frame } from '../frameloop/frame.mjs';
=======
import { frame } from 'motion-dom';
import { useState, useCallback } from 'react';
import { useIsMounted } from './use-is-mounted.mjs';
>>>>>>> 3c08b929f5a458570a719f4b5eccee16e2fc4c1d

function useForceUpdate() {
    const isMounted = useIsMounted();
    const [forcedRenderCount, setForcedRenderCount] = useState(0);
    const forceRender = useCallback(() => {
        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);
    }, [forcedRenderCount]);
    /**
     * Defer this to the end of the next animation frame in case there are multiple
     * synchronous calls.
     */
    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);
    return [deferredForceRender, forcedRenderCount];
}

export { useForceUpdate };
